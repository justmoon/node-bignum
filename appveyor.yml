environment:
  node_pre_gyp_accessKeyId:
    secure: EXM80HyHBdjKthrNyOlVa/8KKy7m5TdzTtGw0JmnaTs=
  node_pre_gyp_secretAccessKey:
    secure: PiO+DWUG15lw8VbOG2LRQHDUu2dn5w/fnY1MNXK5IgO35K37q4k7Y2YDPKqvjHgH

# kudos to serialport for much of this

  matrix:
    - nodejs_version: "4"
    - nodejs_version: "6"
    - nodejs_version: "8"
    - nodejs_version: "10"

platform:
  - x86
  - x64

install:
  - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:platform;
  - ps: $env:Path += ";$(pwd)\node_modules\.bin";
  - ps: >
      @{
        "nodejs_version" = $env:nodejs_version
        "platform" = $env:platform
        "node binary version" = $(node -v)
        "node platform@arch" = $(node -p 'process.platform + process.arch')
        "npm version" = $(npm -v)
        "APPVEYOR_REPO_COMMIT_MESSAGE" = $env:APPVEYOR_REPO_COMMIT_MESSAGE
        "git latest tag" = "$(git describe --tags --always HEAD)"
        "appveyor_repo_tag" = $env:appveyor_repo_tag
      } | Out-String | Write-Host;
  # work around bug in npm 2.15.1 where checksums were coming back bad (node 0.12)
  - ps: >
      if ($(npm -v) -eq "2.15.1") {
        npm install -g npm@3 | Write-Host;
      }
      npm -v | Write-Host;
  # work around an issue with node-gyp v3.3.1 and node 4x
  # package.json has no certificates in it so we're cool
  # https://github.com/nodejs/node-gyp/issues/921
  - ps: npm config set -g cafile=package.json | Write-Host;
  - ps: npm config set -g strict-ssl=false | Write-Host;

build_script:
  - IF /I "%platform%"=="x86" (SET target_arch="ia32") ELSE (SET target_arch="x64")
  - IF /I "%platform%"=="x64" ECHO x64 && CALL "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" amd64
  - IF /I "%platform%"=="x86" ECHO x86 && CALL "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86
  - npm install --build-from-source --msvs_version=2013

test_script:
  - npm test
  - node-pre-gyp package 2>&1
  - node-pre-gyp unpublish publish --release 2>&1
  - node-pre-gyp clean
  - npm install --fallback-to-build=false

deploy: off

version: "{build}"
